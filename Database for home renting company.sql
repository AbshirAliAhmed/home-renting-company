-- 1) Table: Users
CREATE TABLE Users (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) UNIQUE NOT NULL,
    password VARCHAR2(255) NOT NULL,
    phone VARCHAR2(20),
    role VARCHAR2(20) CHECK (role IN ('owner', 'customer')), -- Identifies Owner or Customer
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 2) Table: Owners
CREATE TABLE Owners (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER REFERENCES Users(id) ON DELETE CASCADE, -- Links to Users table
    business_name VARCHAR2(100), -- Optional business name for owners
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 3) Table: Customers
CREATE TABLE Customers (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER REFERENCES Users(id) ON DELETE CASCADE, -- Links to Users table
    membership_level VARCHAR2(50), -- Optional membership level (e.g., 'Basic', 'Premium')
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 4) Table: Properties
CREATE TABLE Properties (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    owner_id NUMBER REFERENCES Owners(id), -- Links to the Owners table
    title VARCHAR2(200) NOT NULL,
    description VARCHAR2(1000),
    address VARCHAR2(255),
    type VARCHAR2(50) CHECK (type IN ('apartment', 'house')),
    bedrooms NUMBER,
    bathrooms NUMBER,
    rent NUMBER NOT NULL,
    availability VARCHAR2(50) CHECK (availability IN ('available', 'unavailable')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 5) Table: Rentals
CREATE TABLE Rentals (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    property_id NUMBER REFERENCES Properties(id),
    customer_id NUMBER REFERENCES Customers(id), -- Links to Customers table
    start_date DATE NOT NULL,
    end_date DATE,
    status VARCHAR2(20) CHECK (status IN ('active', 'pending', 'completed')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 6) Table: Images
CREATE TABLE Images (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    property_id NUMBER REFERENCES Properties(id),
    image_url VARCHAR2(255) NOT NULL,
    uploaded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 7) Table: Payments
CREATE TABLE Payments (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_id NUMBER REFERENCES Customers(id), -- Links to Customers table
    rental_id NUMBER REFERENCES Rentals(id),
    payment_date DATE NOT NULL,
    amount NUMBER NOT NULL,
    status VARCHAR2(20) CHECK (status IN ('successful', 'pending')),
    payment_method VARCHAR2(50) CHECK (payment_method IN ('EVC Plus', 'Credit Card', 'Bank Transfer')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 8) Table: Maintenance Requests
CREATE TABLE Maintenance_Requests (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_id NUMBER REFERENCES Customers(id), -- Links to Customers table
    property_id NUMBER REFERENCES Properties(id),
    description VARCHAR2(1000) NOT NULL,
    status VARCHAR2(20) CHECK (status IN ('open', 'in_progress', 'resolved')),
    requested_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 9) Table: Reviews
CREATE TABLE Reviews (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_id NUMBER REFERENCES Customers(id), -- Links to Customers table
    property_id NUMBER REFERENCES Properties(id),
    rating NUMBER CHECK (rating BETWEEN 1 AND 5),
    comment VARCHAR2(1000),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 10) Table: Messages
CREATE TABLE Messages (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    sender_id NUMBER REFERENCES Users(id),
    receiver_id NUMBER REFERENCES Users(id),
    message VARCHAR2(1000),
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 1)home tab
-- 2)owner Table
-- 3)home registration table
-- 4)costomer table
-- 5)rentals table
-- 6)payment table
-- 7)user   table
-- 8)review  table
-- 9)Maintenance  table








